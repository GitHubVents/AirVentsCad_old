//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AirVentsCadWpf.VentsCadService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/VentsCadServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VentsCadService.IVentsCadService")]
    public interface IVentsCadService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentsCadService/GetData", ReplyAction="http://tempuri.org/IVentsCadService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentsCadService/GetData", ReplyAction="http://tempuri.org/IVentsCadService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentsCadService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IVentsCadService/GetDataUsingDataContractResponse")]
        AirVentsCadWpf.VentsCadService.CompositeType GetDataUsingDataContract(AirVentsCadWpf.VentsCadService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentsCadService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IVentsCadService/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<AirVentsCadWpf.VentsCadService.CompositeType> GetDataUsingDataContractAsync(AirVentsCadWpf.VentsCadService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentsCadService/BuildSpigot", ReplyAction="http://tempuri.org/IVentsCadService/BuildSpigotResponse")]
        AirVentsCadWpf.VentsCadService.BuildSpigotResponse BuildSpigot(AirVentsCadWpf.VentsCadService.BuildSpigotRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVentsCadService/BuildSpigot", ReplyAction="http://tempuri.org/IVentsCadService/BuildSpigotResponse")]
        System.Threading.Tasks.Task<AirVentsCadWpf.VentsCadService.BuildSpigotResponse> BuildSpigotAsync(AirVentsCadWpf.VentsCadService.BuildSpigotRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BuildSpigot", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BuildSpigotRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string width;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string height;
        
        public BuildSpigotRequest() {
        }
        
        public BuildSpigotRequest(string type, string width, string height) {
            this.type = type;
            this.width = width;
            this.height = height;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="BuildSpigotResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class BuildSpigotResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int projectId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int idPdm;
        
        public BuildSpigotResponse() {
        }
        
        public BuildSpigotResponse(int projectId, int idPdm) {
            this.projectId = projectId;
            this.idPdm = idPdm;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVentsCadServiceChannel : AirVentsCadWpf.VentsCadService.IVentsCadService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VentsCadServiceClient : System.ServiceModel.ClientBase<AirVentsCadWpf.VentsCadService.IVentsCadService>, AirVentsCadWpf.VentsCadService.IVentsCadService {
        
        public VentsCadServiceClient() {
        }
        
        public VentsCadServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VentsCadServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VentsCadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VentsCadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public AirVentsCadWpf.VentsCadService.CompositeType GetDataUsingDataContract(AirVentsCadWpf.VentsCadService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<AirVentsCadWpf.VentsCadService.CompositeType> GetDataUsingDataContractAsync(AirVentsCadWpf.VentsCadService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        AirVentsCadWpf.VentsCadService.BuildSpigotResponse AirVentsCadWpf.VentsCadService.IVentsCadService.BuildSpigot(AirVentsCadWpf.VentsCadService.BuildSpigotRequest request) {
            return base.Channel.BuildSpigot(request);
        }
        
        public int BuildSpigot(string type, string width, string height, out int idPdm) {
            AirVentsCadWpf.VentsCadService.BuildSpigotRequest inValue = new AirVentsCadWpf.VentsCadService.BuildSpigotRequest();
            inValue.type = type;
            inValue.width = width;
            inValue.height = height;
            AirVentsCadWpf.VentsCadService.BuildSpigotResponse retVal = ((AirVentsCadWpf.VentsCadService.IVentsCadService)(this)).BuildSpigot(inValue);
            idPdm = retVal.idPdm;
            return retVal.projectId;
        }
        
        public System.Threading.Tasks.Task<AirVentsCadWpf.VentsCadService.BuildSpigotResponse> BuildSpigotAsync(AirVentsCadWpf.VentsCadService.BuildSpigotRequest request) {
            return base.Channel.BuildSpigotAsync(request);
        }
    }
}
